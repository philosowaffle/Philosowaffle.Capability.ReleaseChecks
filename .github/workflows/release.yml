name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release Version'
        required: true
      publishNuget:
        description: 'Publish Nuget'
        required: true
        default: 'true'
      createGHRelease:
        description: 'Create GitHub Release'
        required: true
        default: 'false'

jobs:
  
  release-nuget:
    name: Publish Nuget
    runs-on: ubuntu-latest
    env:
        NUGET_API_KEY: ${{ secrets.NUGET_APIKEY }}

    steps:
      
      - uses: actions/checkout@v3

      - name: Setup .NET Core SDK  6.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0'

      - name: Clean
        run: dotnet clean src/Philosowaffle.Capability.ReleaseChecks/Philosowaffle.Capability.ReleaseChecks.csproj --configuration Debug && dotnet nuget locals all --clear

      - name: Pack Nuget
        run: dotnet pack src/Philosowaffle.Capability.ReleaseChecks/Philosowaffle.Capability.ReleaseChecks.csproj -p:PackageVersion=$INPUTS_VERSION --output ../../nuget

      - if: github.inputs.publishNuget == 'true'
        name: Push Nuget
        run: dotnet nuget push nuget/Philosowaffle.Capability.ReleaseChecks.$INPUTS_VERSION.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json

  create-gh-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: release-nuget
    if: github.inputs.createGHRelease == 'true'

    steps:

      - name: Create Release and Upload Artifact
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.event.inputs.version }}
          allowUpdates: true
          replacesArtifacts: true
          bodyFile:  ${{ github.workspace }}/vNextReleaseNotes.md